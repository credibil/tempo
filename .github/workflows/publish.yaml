name: Publish Release

on:
  # workflow_dispatch:
    
  workflow_call:
    inputs:
      artifacts:
        description: Release artifacts to attach to the release
        type: string
        required: false


jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      # -------------------------------------------
      # Generate release notes for the current release
      # -------------------------------------------
      - name: Generate release notes
        if: ${{ inputs.type == 'changelog' }}
        id: notes
        uses: actions/github-script@v8
        with:
          result-encoding: string
          script: |
            const response = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "v${{ inputs.version }}",
            })
            return response.data.body;

      - name: Update RELEASES.md
        if: ${{ inputs.type == 'changelog' }}
        shell: bash
        run: |
          body=$(sed -n '/---/,$!p' RELEASES.md)
          archive=$(sed -n '/---/,$p' RELEASES.md)

          cat > RELEASES.md <<EOF
          $body

          ${{ steps.notes.outputs.result }}

          $archive
          EOF

      # -------------------------------------------
      # Create template for the next version
      # -------------------------------------------
      - name: Archive previous release notes
        if: ${{ inputs.type == 'template' }}
        shell: bash
        run: |
          set -ex
          title=$(sed -n '1p' RELEASES.md)
          version=$(echo $title | sed 's/## //')
          version_x=$(echo $version | sed 's/.$/x/')

          sed -i "/ARCHIVE_START/a * [$version_x](https://github.com/${{ github.repository }}/blob/release-$version/RELEASES.md)" RELEASES.md

      - name: Create next release notes
        if: ${{ inputs.type == 'template' }}
        shell: bash
        run: |
          set -ex
          archive=$(sed -n '/---/,$p' RELEASES.md)

          cat > RELEASES.md <<EOF
          ## ${{ inputs.version }}

          Unreleased

          ### Added

          ### Changed

          $archive
          EOF

      - name: Update branch with changes
        shell: bash
        run: |
          git commit -am "Update release notes for ${{ inputs.version }}"
          git push origin HEAD:${{ inputs.branch }}



  # ci:
  #   name: CI
  #   uses: credibil/pipeline/.github/workflows/ci.yaml@main
  #   with:
  #     outdated: prost

  # publish:
  #   name: Publish
  #   needs: ci
  #   uses: credibil/pipeline/.github/workflows/publish.yaml@main

  # package:
  #   name: Package
  #   needs: publish
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
    
  #   steps:
  #     - uses: docker/setup-qemu-action@v3
  #     - uses: docker/setup-buildx-action@v3

  #     - name: Log in to GHCR
  #       uses: docker/login-action@v3
  #       with:
  #         registry: https://ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build and push image
  #       uses: docker/build-push-action@v6
  #       with:
  #         push: true
  #         file: ./examples/runtimes/Dockerfile
  #         platforms: linux/amd64,linux/arm64
  #         build-args: |
  #           PACKAGE=everything
  #         tags: |
  #           ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ needs.publish.outputs.version }}
  #           ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest